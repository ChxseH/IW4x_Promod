#include maps\mp\_utility;
#include maps\mp\gametypes\_hud_util;
#include common_scripts\utility;
FACTION_REF_COL=0;FACTION_NAME_COL=1;FACTION_SHORT_NAME_COL=1;FACTION_WIN_GAME_COL=3;FACTION_WIN_ROUND_COL=4;FACTION_MISSION_ACCOMPLISHED_COL=5;FACTION_ELIMINATED_COL=6;FACTION_FORFEITED_COL=7;FACTION_ICON_COL=8;FACTION_HUD_ICON_COL=9;FACTION_VOICE_PREFIX_COL=10;FACTION_SPAWN_MUSIC_COL=11;FACTION_WIN_MUSIC_COL=12;FACTION_COLOR_R_COL=13;FACTION_COLOR_G_COL=14;FACTION_COLOR_B_COL=15;default_onDeadEvent(team){if(team=="allies"){iPrintLn(game["strings"]["allies_eliminated"]);logString("team eliminated, win: opfor, allies: "+game["teamScores"]["allies"]+", opfor: "+game["teamScores"]["axis"]);if(getDvar("g_gametype")=="sd"||getDvar("g_gametype")=="dd"||getDvar("g_gametype")=="war")thread endGame("axis",getDvar("g_TeamName_allies")+" Eliminated");else thread endGame("axis",game["strings"]["allies_eliminated"]);}else if(team=="axis"){iPrintLn(game["strings"]["axis_eliminated"]);logString("team eliminated, win: allies, allies: "+game["teamScores"]["allies"]+", opfor: "+game["teamScores"]["axis"]);if(getDvar("g_gametype")=="sd"||getDvar("g_gametype")=="dd"||getDvar("g_gametype")=="war")thread endGame("allies",getDvar("g_TeamName_axis")+" Eliminated");else thread endGame("allies",game["strings"]["axis_eliminated"]);}else{logString("tie, allies: "+game["teamScores"]["allies"]+", opfor: "+game["teamScores"]["axis"]);if(level.teamBased)thread endGame("tie",game["strings"]["tie"]);else thread endGame(undefined,game["strings"]["tie"]);}}default_onOneLeftEvent(team){if(level.teamBased){assert(team=="allies"||team=="axis");lastPlayer=getLastLivingPlayer(team);}else{lastPlayer=getLastLivingPlayer();logString("last one alive, win: "+lastPlayer.name);thread endGame(lastPlayer,&"MP_ENEMIES_ELIMINATED");}return true;}default_onTimeLimit(){winner=undefined;if(level.teamBased){if(game["teamScores"]["allies"]==game["teamScores"]["axis"])winner="tie";else if(game["teamScores"]["axis"]>game["teamScores"]["allies"])winner="axis";else winner="allies";logString("time limit, win: "+winner+", allies: "+game["teamScores"]["allies"]+", opfor: "+game["teamScores"]["axis"]);}else{winner=maps\mp\gametypes\_gamescore::getHighestScoringPlayer();if(isDefined(winner))logString("time limit, win: "+winner.name);else logString("time limit, tie");}thread endGame(winner,game["strings"]["time_limit_reached"]);}default_onHalfTime(){winner=undefined;thread endGame("halftime",game["strings"]["time_limit_reached"]);}forceEnd(){if(level.hostForcedEnd||level.forcedEnd)return;winner=undefined;if(level.teamBased){if(game["teamScores"]["allies"]==game["teamScores"]["axis"])winner="tie";else if(game["teamScores"]["axis"]>game["teamScores"]["allies"])winner="axis";else winner="allies";logString("host ended game, win: "+winner+", allies: "+game["teamScores"]["allies"]+", opfor: "+game["teamScores"]["axis"]);}else{winner=maps\mp\gametypes\_gamescore::getHighestScoringPlayer();if(isDefined(winner))logString("host ended game, win: "+winner.name);else logString("host ended game, tie");}level.forcedEnd=true;level.hostForcedEnd=true;if(level.splitscreen)endString=&"MP_ENDED_GAME";else endString=&"MP_HOST_ENDED_GAME";thread endGame(winner,endString);}onScoreLimit(){scoreText=game["strings"]["score_limit_reached"];winner=undefined;if(level.teamBased){if(game["teamScores"]["allies"]==game["teamScores"]["axis"])winner="tie";else if(game["teamScores"]["axis"]>game["teamScores"]["allies"])winner="axis";else winner="allies";logString("scorelimit, win: "+winner+", allies: "+game["teamScores"]["allies"]+", opfor: "+game["teamScores"]["axis"]);}else{winner=maps\mp\gametypes\_gamescore::getHighestScoringPlayer();if(isDefined(winner))logString("scorelimit, win: "+winner.name);else logString("scorelimit, tie");}thread endGame(winner,scoreText);return true;}updateGameEvents(){if(!getGametypeNumLives()&&(!isDefined(level.disableSpawning)||!level.disableSpawning))return;if(!gameHasStarted())return;if(level.inGracePeriod)return;if(level.teamBased){livesCount["allies"]=level.livesCount["allies"];livesCount["axis"]=level.livesCount["axis"];if(isDefined(level.disableSpawning)&&level.disableSpawning){livesCount["allies"]=0;livesCount["axis"]=0;}if(!level.aliveCount["allies"]&&!level.aliveCount["axis"]&&!livesCount["allies"]&&!livesCount["axis"]){return[[level.onDeadEvent]]("all");}if(!level.aliveCount["allies"]&&!livesCount["allies"]){return[[level.onDeadEvent]]("allies");}if(!level.aliveCount["axis"]&&!livesCount["axis"]){return[[level.onDeadEvent]]("axis");}if(level.aliveCount["allies"]==1&&!livesCount["allies"]){if(!isDefined(level.oneLeftTime["allies"])){level.oneLeftTime["allies"]=getTime();return[[level.onOneLeftEvent]]("allies");}}if(level.aliveCount["axis"]==1&&!livesCount["axis"]){if(!isDefined(level.oneLeftTime["axis"])){level.oneLeftTime["axis"]=getTime();return[[level.onOneLeftEvent]]("axis");}}}else{if((!level.aliveCount["allies"]&&!level.aliveCount["axis"])&&(!level.livesCount["allies"]&&!level.livesCount["axis"])){return[[level.onDeadEvent]]("all");}livePlayers=getPotentialLivingPlayers();if(livePlayers.size==1){return[[level.onOneLeftEvent]]("all");}}}waittillFinalKillcamDone(){if(!level.showingFinalKillcam)return false;while(level.showingFinalKillcam)wait(0.05);return true;}timeLimitClock_Intermission(waitTime){setGameEndTime(getTime()+int(waitTime*1000));clockObject=spawn("script_origin",(0,0,0));clockObject hide();if(waitTime>=10.0)wait(waitTime-10.0);for(;;){clockObject playSound("ui_mp_timer_countdown");wait(1.0);}}waitForPlayers(maxTime){endTime=gettime()+maxTime*1000-200;if(level.teamBased)while((!level.hasSpawned["axis"]||!level.hasSpawned["allies"])&&gettime()<endTime)wait(0.05);else while(level.maxPlayerCount<2&&gettime()<endTime)wait(0.05);}prematchPeriod(){level endon("game_ended");if(level.prematchPeriod>0&&isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]!="match"&&game["PROMOD_MATCH_MODE"]!="strat"){if(level.allowStrat&&level.allowReadyUp&&isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="pub"&&level.gametype=="sd")matchStartTimerSkip();else matchStartTimerPC();}else{matchStartTimerSkip();}for(index=0;index<level.players.size;index++){level.players[index]freezeControlsWrapper(false);level.players[index]enableWeapons();hintMessage=getObjectiveHintText(level.players[index].pers["team"]);if(!isDefined(hintMessage)||!level.players[index].hasSpawned)continue;level.players[index]setClientDvar("scr_objectiveText",hintMessage);level.players[index]thread maps\mp\gametypes\_hud_message::hintMessage(hintMessage);}if(game["state"]!="playing")return;}gracePeriod(){level endon("game_ended");while(level.inGracePeriod){wait(1.0);level.inGracePeriod--;}level notify("grace_period_ending");wait(0.05);gameFlagSet("graceperiod_done");level.inGracePeriod=false;if(game["state"]!="playing")return;if(getGametypeNumLives()){players=level.players;for(i=0;i<players.size;i++){player=players[i];if(!player.hasSpawned&&player.sessionteam!="spectator"&&!isAlive(player))player.statusicon="hud_status_dead";}}level thread updateGameEvents();}freezePlayerForRoundEnd(delay){self endon("disconnect");self clearLowerMessages();if(!isDefined(delay))delay=0.05;self closepopupMenu();self closeInGameMenu();wait(delay);if(isAlive(self))self freezeControlsWrapper(false);}checkTimeLimit(prevTimePassed){if(isDefined(level.timeLimitOverride)&&level.timeLimitOverride)return;if(game["state"]!="playing"){setGameEndTime(0);return;}if(getTimeLimit()<=0){if(isDefined(level.startTime))setGameEndTime(level.startTime);else setGameEndTime(0);return;}if(!gameFlag("prematch_done")){setGameEndTime(0);return;}if(!isdefined(level.startTime))return;timeLeft=getTimeRemaining();setGameEndTime(getTime()+int(timeLeft));if(timeLeft>0){if(getHalfTime()&&checkHalfTime(prevTimePassed))[[level.onHalfTime]]();return;}[[level.onTimeLimit]]();}checkHalfTime(prevTimePassed){if(!level.teamBased)return false;if(getTimeLimit()){halfTime=(getTimeLimit()*60*1000)*0.5;if(getTimePassed()>=halfTime&&prevTimePassed<halfTime&&prevTimePassed>0){game["roundMillisecondsAlreadyPassed"]=getTimePassed();return true;}}return false;}getTimeRemaining(){return getTimeLimit()*60*1000-getTimePassed();}checkTeamScoreLimitSoon(team){assert(isDefined(team));if(getWatchedDvar("scorelimit")<=0||isObjectiveBased())return;if(isDefined(level.scoreLimitOverride)&&level.scoreLimitOverride)return;if(!level.teamBased)return;if(getTimePassed()<(60*1000))return;timeLeft=estimatedTimeTillScoreLimit(team);if(timeLeft<2)level notify("match_ending_soon","score");}checkPlayerScoreLimitSoon(){if(getWatchedDvar("scorelimit")<=0||isObjectiveBased())return;if(level.teamBased)return;if(getTimePassed()<(60*1000))return;timeLeft=self estimatedTimeTillScoreLimit();if(timeLeft<2)level notify("match_ending_soon","score");}checkScoreLimit(){if(isObjectiveBased())return false;if(isDefined(level.scoreLimitOverride)&&level.scoreLimitOverride)return false;if(game["state"]!="playing")return false;if(getWatchedDvar("scorelimit")<=0)return false;if(level.teamBased){if(game["teamScores"]["allies"]<getWatchedDvar("scorelimit")&&game["teamScores"]["axis"]<getWatchedDvar("scorelimit"))return false;}else{if(!isPlayer(self))return false;if(self.score<getWatchedDvar("scorelimit"))return false;}return onScoreLimit();}updateGameTypeDvars(){level endon("game_ended");while(game["state"]=="playing"){if(isdefined(level.startTime)){if(getTimeRemaining()<3000){wait.1;continue;}}wait 1;}}matchStartTimerPC(){thread matchStartTimer("waiting_for_teams",level.prematchPeriod+level.prematchPeriodEnd);waitForPlayers(level.prematchPeriod);while((!isDefined(level.players)||!level.players.size)&&level.lessCrashes)wait 0.5;if(level.prematchPeriodEnd>0)matchStartTimer("match_starting_in",level.prematchPeriodEnd);}matchStartTimer_Internal(countTime,matchStartTimer){waittillframeend;visionSetNaked("mpIntro",0);level endon("match_start_timer_beginning");while(countTime>0&&!level.gameEnded){matchStartTimer thread maps\mp\gametypes\_hud::fontPulse(level);wait(matchStartTimer.inFrames*0.05);matchStartTimer setValue(countTime);if(countTime==2)visionSetNaked(getDvar("mapname"),3.0);countTime--;wait(1-(matchStartTimer.inFrames*0.05));}}matchStartTimer(type,duration){level notify("match_start_timer_beginning");matchStartText=createServerFontString("objective",1.5);matchStartText setPoint("CENTER","CENTER",0,-60);matchStartText.sort=1001;matchStartText setText(game["strings"]["waiting_for_teams"]);matchStartText.foreground=false;matchStartText.hidewheninmenu=true;matchStartText setText(game["strings"][type]);matchStartTimer=createServerFontString("hudbig",1);matchStartTimer setPoint("CENTER","CENTER",0,-45);matchStartTimer.sort=1001;matchStartTimer.color=(1,1,0);matchStartTimer.foreground=false;matchStartTimer.hidewheninmenu=true;matchStartTimer maps\mp\gametypes\_hud::fontPulseInit();countTime=int(duration);if(countTime>=2){matchStartTimer_Internal(countTime,matchStartTimer);visionSetNaked(getDvar("mapname"),3.0);}else{visionSetNaked("mpIntro",0);visionSetNaked(getDvar("mapname"),1.0);}matchStartTimer destroyElem();matchStartText destroyElem();}matchStartTimerSkip(){visionSetNaked(getDvar("mapname"),0);}onRoundSwitch(){if(!isDefined(game["switchedsides"]))game["switchedsides"]=false;if(game["roundsWon"]["allies"]==getWatchedDvar("winlimit")-1&&game["roundsWon"]["axis"]==getWatchedDvar("winlimit")-1){aheadTeam=getBetterTeam();if(aheadTeam!=game["defenders"]){game["switchedsides"]=!game["switchedsides"];}else{level.halftimeSubCaption="";}level.halftimeType="overtime";}else{level.halftimeType="halftime";game["switchedsides"]=!game["switchedsides"];}}checkRoundSwitch(){if(!level.teamBased)return false;if(!isDefined(level.roundSwitch)||!level.roundSwitch)return false;assert(game["roundsPlayed"]>0);if(game["roundsPlayed"]>0&&game["roundsPlayed"]%level.roundSwitch==0){if(isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="match"){game["promod_do_readyup"]=true;game["allies_timeout_called"]=0;game["axis_timeout_called"]=0;}game["promod_timeout_called"]=false;onRoundSwitch();return true;}return false;}timeUntilRoundEnd(){if(level.gameEnded){timePassed=(getTime()-level.gameEndTime)/1000;timeRemaining=level.postRoundTime-timePassed;if(timeRemaining<0)return 0;return timeRemaining;}if(getTimeLimit()<=0)return undefined;if(!isDefined(level.startTime))return undefined;tl=getTimeLimit();timePassed=(getTime()-level.startTime)/1000;timeRemaining=(getTimeLimit()*60)-timePassed;if(isDefined(level.timePaused))timeRemaining+=level.timePaused;return timeRemaining+level.postRoundTime;}freeGameplayHudElems(){self.lowerMessage destroyElem();self.lowerTimer destroyElem();if(isDefined(self.proxBar))self.proxBar destroyElem();if(isDefined(self.proxBarText))self.proxBarText destroyElem();}roundEndWait(defaultDelay,matchBonus){notifiesDone=false;while(!notifiesDone){players=level.players;notifiesDone=true;foreach(player in players){if(!isDefined(player.doingSplash))continue;if(!player maps\mp\gametypes\_hud_message::isDoingSplash())continue;notifiesDone=false;}wait(0.5);}if(!matchBonus){wait(defaultDelay);level notify("round_end_finished");return;}wait(defaultDelay/2);level notify("give_match_bonus");wait(defaultDelay/2);notifiesDone=false;while(!notifiesDone){players=level.players;notifiesDone=true;foreach(player in players){if(!isDefined(player.doingSplash))continue;if(!player maps\mp\gametypes\_hud_message::isDoingSplash())continue;notifiesDone=false;}wait(0.5);}level notify("round_end_finished");}roundEndDOF(time){self setDepthOfField(0,128,512,4000,6,1.8);}Callback_StartGameType(){maps\mp\_load::main();levelFlagInit("round_over",false);levelFlagInit("game_over",false);levelFlagInit("block_notifies",false);level.prematchPeriod=0;level.prematchPeriodEnd=0;level.postGameNotifies=0;level.intermission=false;makeDvarServerInfo("cg_thirdPersonAngle",356);makeDvarServerInfo("scr_gameended",0);if(!isDefined(game["gamestarted"])){game["clientid"]=0;alliesCharSet=getMapCustom("allieschar");if((!isDefined(alliesCharSet)||alliesCharSet=="")){if(!isDefined(game["allies"]))alliesCharSet="us_army";else alliesCharSet=game["allies"];}axisCharSet=getMapCustom("axischar");if((!isDefined(axisCharSet)||axisCharSet=="")){if(!isDefined(game["axis"]))axisCharSet="opforce_composite";else axisCharSet=game["axis"];}game["allies"]=alliesCharSet;game["axis"]=axisCharSet;if(!isDefined(game["attackers"])||!isDefined(game["defenders"]))thread error("No attackers or defenders team defined in level .gsc.");if(!isDefined(game["attackers"]))game["attackers"]="allies";if(!isDefined(game["defenders"]))game["defenders"]="axis";if(!isDefined(game["state"]))game["state"]="playing";precacheStatusIcon("hud_status_dead");precacheStatusIcon("hud_status_connecting");precacheString(&"MPUI_REVIVING");precacheString(&"MPUI_BEING_REVIVED");precacheRumble("damage_heavy");precacheShader("white");precacheShader("black");game["strings"]["press_to_spawn"]=&"PLATFORM_PRESS_TO_SPAWN";if(level.teamBased){game["strings"]["waiting_for_teams"]=&"MP_WAITING_FOR_TEAMS";game["strings"]["opponent_forfeiting_in"]=&"MP_OPPONENT_FORFEITING_IN";}else{game["strings"]["waiting_for_teams"]=&"MP_WAITING_FOR_MORE_PLAYERS";game["strings"]["opponent_forfeiting_in"]=&"MP_OPPONENT_FORFEITING_IN";}game["strings"]["match_starting_in"]=&"MP_MATCH_STARTING_IN";game["strings"]["match_resuming_in"]=&"MP_MATCH_RESUMING_IN";game["strings"]["waiting_for_players"]=&"MP_WAITING_FOR_PLAYERS";game["strings"]["spawn_next_round"]=&"MP_SPAWN_NEXT_ROUND";game["strings"]["waiting_to_spawn"]=&"MP_WAITING_TO_SPAWN";game["strings"]["waiting_to_safespawn"]=&"MP_WAITING_TO_SAFESPAWN";game["strings"]["match_starting"]=&"MP_MATCH_STARTING";game["strings"]["change_class"]=&"MP_CHANGE_CLASS_NEXT_SPAWN";game["strings"]["last_stand"]=&"MPUI_LAST_STAND";game["strings"]["final_stand"]=&"MPUI_FINAL_STAND";game["strings"]["c4_death"]=&"MPUI_C4_DEATH";game["strings"]["cowards_way"]=&"PLATFORM_COWARDS_WAY_OUT";game["strings"]["tie"]=&"MP_MATCH_TIE";game["strings"]["round_draw"]=&"MP_ROUND_DRAW";game["strings"]["grabbed_flag"]=&"MP_GRABBED_FLAG_FIRST";game["strings"]["enemies_eliminated"]=&"MP_ENEMIES_ELIMINATED";game["strings"]["score_limit_reached"]=&"MP_SCORE_LIMIT_REACHED";game["strings"]["round_limit_reached"]=&"MP_ROUND_LIMIT_REACHED";game["strings"]["time_limit_reached"]=&"MP_TIME_LIMIT_REACHED";game["strings"]["players_forfeited"]=&"MP_PLAYERS_FORFEITED";game["strings"]["S.A.S Win"]=&"SAS_WIN";game["strings"]["Spetsnaz Win"]=&"SPETSNAZ_WIN";game["colors"]["blue"]=(0.25,0.25,0.75);game["colors"]["red"]=(0.75,0.25,0.25);game["colors"]["white"]=(1.0,1.0,1.0);game["colors"]["black"]=(0.0,0.0,0.0);game["colors"]["green"]=(0.25,0.75,0.25);game["colors"]["yellow"]=(0.65,0.65,0.0);game["colors"]["orange"]=(1.0,0.45,0.0);game["strings"]["allies_eliminated"]=maps\mp\gametypes\_teams::getTeamEliminatedString("allies");game["strings"]["allies_forfeited"]=maps\mp\gametypes\_teams::getTeamForfeitedString("allies");game["strings"]["allies_name"]=maps\mp\gametypes\_teams::getTeamName("allies");game["icons"]["allies"]=maps\mp\gametypes\_teams::getTeamIcon("allies");game["colors"]["allies"]=maps\mp\gametypes\_teams::getTeamColor("allies");game["strings"]["axis_eliminated"]=maps\mp\gametypes\_teams::getTeamEliminatedString("axis");game["strings"]["axis_forfeited"]=maps\mp\gametypes\_teams::getTeamForfeitedString("axis");game["strings"]["axis_name"]=maps\mp\gametypes\_teams::getTeamName("axis");game["icons"]["axis"]=maps\mp\gametypes\_teams::getTeamIcon("axis");game["colors"]["axis"]=maps\mp\gametypes\_teams::getTeamColor("axis");if(game["colors"]["allies"]==(0,0,0))game["colors"]["allies"]=(0.5,0.5,0.5);if(game["colors"]["axis"]==(0,0,0))game["colors"]["axis"]=(0.5,0.5,0.5);[[level.onPrecacheGameType]]();level.prematchPeriod=maps\mp\gametypes\_tweakables::getTweakableValue("game","playerwaittime");level.prematchPeriodEnd=maps\mp\gametypes\_tweakables::getTweakableValue("game","matchstarttime");}if(!isDefined(game["status"]))game["status"]="normal";makeDvarServerInfo("ui_overtime",(game["status"]=="overtime"));if(game["status"]!="overtime"&&game["status"]!="halftime"){game["teamScores"]["allies"]=0;game["teamScores"]["axis"]=0;}if(!isDefined(game["timePassed"]))game["timePassed"]=0;if(!isDefined(game["roundsPlayed"]))game["roundsPlayed"]=game["SCORES_ATTACK"]+game["SCORES_DEFENCE"];if(!isDefined(game["roundsWon"]))game["roundsWon"]=[];if(level.teamBased){if(!isDefined(game["roundsWon"][game["defenders"]]))game["roundsWon"][game["defenders"]]=game["SCORES_DEFENCE"];if(!isDefined(game["roundsWon"][game["attackers"]]))game["roundsWon"][game["attackers"]]=game["SCORES_ATTACK"];}game["strat_finished"]=0;level.gameEnded=false;level.forcedEnd=false;level.hostForcedEnd=false;level.hardcoreMode=getDvarInt("g_hardcore");if(level.hardcoreMode)logString("game mode: hardcore");level.dieHardMode=getDvarInt("scr_diehard");if(!level.teamBased)level.dieHardMode=0;if(level.dieHardMode)logString("game mode: diehard");level.useStartSpawns=true;level.objectivePointsMod=1;if(matchMakingGame())level.maxAllowedTeamKills=2;else level.maxAllowedTeamKills=-1;thread maps\mp\gametypes\_persistence::init();thread maps\mp\gametypes\_menus::init();thread maps\mp\gametypes\_hud::init();thread maps\mp\gametypes\_serversettings::init();thread maps\mp\gametypes\_teams::init();thread maps\mp\gametypes\_weapons::init();thread maps\mp\gametypes\_killcam::init();thread maps\mp\gametypes\_shellshock::init();thread maps\mp\gametypes\_damagefeedback::init();thread maps\mp\gametypes\_healthoverlay::init();thread maps\mp\gametypes\_spectating::init();thread maps\mp\gametypes\_objpoints::init();thread maps\mp\gametypes\_gameobjects::init();thread maps\mp\gametypes\_spawnlogic::init();thread maps\mp\_events::init();thread promod_ruleset\servercheck::main();thread maps\mp\gametypes\_promod::init();thread maps\mp\gametypes\_hud_message::init();thread maps\mp\gametypes\_quickmessages::init();if(level.gametype=="sd"&&game["hostname"]!="")promod\_promod_util::setHostName();foreach(locString in game["strings"])precacheString(locString);foreach(icon in game["icons"])precacheShader(icon);game["gamestarted"]=true;level.maxPlayerCount=0;level.waveDelay["allies"]=0;level.waveDelay["axis"]=0;level.lastWave["allies"]=0;level.lastWave["axis"]=0;level.wavePlayerSpawnIndex["allies"]=0;level.wavePlayerSpawnIndex["axis"]=0;level.alivePlayers["allies"]=[];level.alivePlayers["axis"]=[];level.activePlayers=[];makeDvarServerInfo("ui_scorelimit",0);makeDvarServerInfo("ui_allow_classchange",getDvar("ui_allow_classchange"));makeDvarServerInfo("ui_allow_teamchange",1);setDvar("ui_allow_teamchange",1);if(getGametypeNumLives())setdvar("g_deadChat",0);else setdvar("g_deadChat",1);waveDelay=getDvarInt("scr_"+level.gameType+"_waverespawndelay");if(waveDelay){level.waveDelay["allies"]=waveDelay;level.waveDelay["axis"]=waveDelay;level.lastWave["allies"]=0;level.lastWave["axis"]=0;level thread maps\mp\gametypes\_gamelogic::waveSpawnTimer();}gameFlagInit("prematch_done",false);level.gracePeriod=15;level.inGracePeriod=level.gracePeriod;gameFlagInit("graceperiod_done",false);level.roundEndDelay=4;level.halftimeRoundEndDelay=4;if(level.teamBased){maps\mp\gametypes\_gamescore::updateTeamScore("axis");maps\mp\gametypes\_gamescore::updateTeamScore("allies");}else{thread maps\mp\gametypes\_gamescore::initialDMScoreUpdate();}thread updateUIScoreLimit();level notify("update_scorelimit");[[level.onStartGameType]]();thread startGame();level thread updateWatchedDvars();level thread timeLimitThread();}Callback_CodeEndGame(){if(!level.gameEnded)level thread maps\mp\gametypes\_gamelogic::forceEnd();}timeLimitThread(){level endon("game_ended");prevTimePassed=getTimePassed();while(game["state"]=="playing"){while((!isDefined(level.players)||!level.players.size)&&level.lessCrashes)wait 0.5;thread checkTimeLimit(prevTimePassed);prevTimePassed=getTimePassed();if(isdefined(level.startTime)){if(getTimeRemaining()<3000){wait.1;continue;}}wait 1;}}updateUIScoreLimit(){for(;;){level waittill_either("update_scorelimit","update_winlimit");if(!isRoundBased()||!isObjectiveBased()){setDvar("ui_scorelimit",getWatchedDvar("scorelimit"));thread checkScoreLimit();}else{setDvar("ui_scorelimit",getWatchedDvar("winlimit"));}}}playTickingSound(){self endon("death");self endon("stop_ticking");level endon("game_ended");time=level.bombTimer;while(1){self playSound("ui_mp_suitcasebomb_timer");if(time>10){time-=1;wait 1;}else if(time>4){time-=.5;wait.5;}else if(time>1){time-=.4;wait.4;}else{time-=.3;wait.3;}maps\mp\gametypes\_hostmigration::waitTillHostMigrationDone();}}stopTickingSound(){self notify("stop_ticking");}timeLimitClock(){level endon("game_ended");wait.05;clockObject=spawn("script_origin",(0,0,0));clockObject hide();while(game["state"]=="playing"){if(!level.timerStopped&&getTimeLimit()){timeLeft=getTimeRemaining()/1000;timeLeftInt=int(timeLeft+0.5);if(getHalfTime()&&timeLeftInt>(getTimeLimit()*60)*0.5)timeLeftInt-=int((getTimeLimit()*60)*0.5);if((timeLeftInt>=30&&timeLeftInt<=60))level notify("match_ending_soon","time");if(timeLeftInt<=10||(timeLeftInt<=30&&timeLeftInt%2==0)){level notify("match_ending_very_soon");if(timeLeftInt==0)break;clockObject playSound("ui_mp_timer_countdown");}if(timeLeft-floor(timeLeft)>=.05)wait timeLeft-floor(timeLeft);}wait(1.0);}}gameTimer(){level endon("game_ended");level waittill("prematch_over");level.startTime=getTime();level.discardTime=0;if(isDefined(game["roundMillisecondsAlreadyPassed"])){level.startTime-=game["roundMillisecondsAlreadyPassed"];game["roundMillisecondsAlreadyPassed"]=undefined;}prevtime=gettime();while(game["state"]=="playing"){if(!level.timerStopped){game["timePassed"]+=gettime()-prevtime;}prevtime=gettime();wait(1.0);}}UpdateTimerPausedness(){shouldBeStopped=level.timerStoppedForGameMode||isDefined(level.hostMigrationTimer);if(!gameFlag("prematch_done"))shouldBeStopped=false;if(!level.timerStopped&&shouldBeStopped){level.timerStopped=true;level.timerPauseTime=gettime();}else if(level.timerStopped&&!shouldBeStopped){level.timerStopped=false;level.discardTime+=gettime()-level.timerPauseTime;}}pauseTimer(){level.timerStoppedForGameMode=true;UpdateTimerPausedness();}resumeTimer(){level.timerStoppedForGameMode=false;UpdateTimerPausedness();}startGame(){level thread header();thread gameTimer();level.timerStopped=false;level.timerStoppedForGameMode=false;thread maps\mp\gametypes\_spawnlogic::spawnPerFrameUpdate();game["promod_in_timeout"]=0;prematchPeriod();if(!isDefined(game["promod_timeout_called"]))game["promod_timeout_called"]=false;if(!isDefined(game["promod_do_readyup"]))game["promod_do_readyup"]=false;if(((isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="match")||(level.allowReadyUp&&isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="pub"))&&!game["promod_first_readyup_done"]&&(!game["roundsPlayed"]||game["SCORES_ATTACK"]>0||game["SCORES_DEFENCE"]>0))game["promod_do_readyup"]=true;game["SCORES_ATTACK"]=0;game["SCORES_DEFENCE"]=0;if(!isDefined(game["allies_timeout_called"])&&!isDefined(game["axis_timeout_called"])){game["allies_timeout_called"]=0;game["axis_timeout_called"]=0;}if(isDefined(game["promod_timeout_called"])&&game["promod_timeout_called"]){thread promod\timeout::main();return;}if(level.gametype=="sd"&&isDefined(game["promod_do_readyup"])&&game["promod_do_readyup"]){thread promod\readyup::disableBombsites();thread promod\timeout::disableBombBag();thread promod\readyup::main();return;}if(((isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="match")||(level.allowStrat&&isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="pub"))&&level.gametype=="sd"){if(game["PROMOD_MATCH_MODE"]!="match"&&!level.allowReadyUp)promod\strattime::main();else if(isDefined(game["promod_do_readyup"])&&!game["promod_do_readyup"])promod\strattime::main();}else game["strat_finished"]=1;if(isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="strat"){thread promod\readyup::disableBombsites();thread promod\stratmode::main();setDvar("g_deadChat",1);SetClientNameMode("auto_change");setGameEndTime(0);return;}else if((isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="match")||(isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="pub"))setDvar("g_deadChat",0);if(isDefined(level.timeout_over)&&!level.timeout_over)return;if(isDefined(game["PROMOD_KNIFEROUND"])&&game["PROMOD_KNIFEROUND"]){foreach(player in level.players){if((player.pers["team"]=="allies"||player.pers["team"]=="axis")&&isDefined(player.pers["class"])){player takeAllWeapons();player giveWeapon("deserteaglegold_mp",0,false);player setWeaponAmmoClip("deserteaglegold_mp",0);player setWeaponAmmoStock("deserteaglegold_mp",0);player setSpawnWeapon("deserteaglegold_mp");player switchtoWeapon("deserteaglegold_mp");}}thread promod\readyup::disableBombsites();thread promod\timeout::disableBombBag();if(game["PROMOD_MATCH_MODE"]!="pub"){level.timeLimitOverride=true;setGameEndTime(0);}}gameFlagSet("prematch_done");level notify("prematch_over");UpdateTimerPausedness();game["promod_in_timeout"]=0;if(!isDefined(game["PROMOD_KNIFEROUND"])||!game["PROMOD_KNIFEROUND"]||game["PROMOD_MATCH_MODE"]=="pub")thread timeLimitClock();thread gracePeriod();}header(){level endon("header_done");if(isDefined(game["state"])&&game["state"]=="postgame")wait 0.75;if(game["promod_do_readyup"]!=true){if(isDefined(level.promod_ver))level.promod_ver destroy();if(isDefined(level.promod_mode))level.promod_mode destroy();level.promod_ver=createServerFontString("default",1.4);level.promod_ver setPoint("TOPRIGHT","TOPRIGHT",-5,0);level.promod_ver setText(game["PROMOD_VERSION"]);level.promod_ver.hidewheninmenu=true;level.promod_ver.alpha=1;level.promod_mode=createServerFontString("default",1.1);level.promod_mode setPoint("TOPRIGHT","TOPRIGHT",-11,15);level.promod_mode setText(game["PROMOD_MODE_HUD"]);level.promod_mode.hidewheninmenu=true;level.promod_mode.alpha=1;wait 8;level.promod_mode fadeOverTime(2);level.promod_ver fadeOverTime(2);level.promod_mode.alpha=0;level.promod_ver.alpha=0;wait 2;if(isDefined(level.promod_ver))level.promod_ver destroy();if(isDefined(level.promod_mode))level.promod_mode destroy();}level notify("header_done");}waveSpawnTimer(){level endon("game_ended");while(game["state"]=="playing"){time=getTime();if(time-level.lastWave["allies"]>(level.waveDelay["allies"]*1000)){level notify("wave_respawn_allies");level.lastWave["allies"]=time;level.wavePlayerSpawnIndex["allies"]=0;}if(time-level.lastWave["axis"]>(level.waveDelay["axis"]*1000)){level notify("wave_respawn_axis");level.lastWave["axis"]=time;level.wavePlayerSpawnIndex["axis"]=0;}wait(0.05);}}getBetterTeam(){kills["allies"]=0;kills["axis"]=0;deaths["allies"]=0;deaths["axis"]=0;foreach(player in level.players){team=player.pers["team"];if(isDefined(team)&&(team=="allies"||team=="axis")){kills[team]+=player.kills;deaths[team]+=player.deaths;}}if(kills["allies"]>kills["axis"])return"allies";else if(kills["axis"]>kills["allies"])return"axis";if(deaths["allies"]<deaths["axis"])return"allies";else if(deaths["axis"]<deaths["allies"])return"axis";if(randomint(2)==0)return"allies";return"axis";}displayRoundEnd(winner,endReasonText){foreach(player in level.players){if(isDefined(player.connectedPostGame)||player.pers["team"]=="spectator")continue;if(level.teamBased)player thread maps\mp\gametypes\_hud_message::teamOutcomeNotify(winner,true,endReasonText);else player thread maps\mp\gametypes\_hud_message::outcomeNotify(winner,endReasonText);}if(!wasLastRound())level notify("round_win",winner);if(wasLastRound())roundEndWait(level.roundEndDelay,false);else roundEndWait(level.roundEndDelay,true);}displayGameEnd(winner,endReasonText){foreach(player in level.players){if(isDefined(player.connectedPostGame)||player.pers["team"]=="spectator")continue;if(level.teamBased)player thread maps\mp\gametypes\_hud_message::teamOutcomeNotify(winner,false,endReasonText);else player thread maps\mp\gametypes\_hud_message::outcomeNotify(winner,endReasonText);}level notify("game_win",winner);roundEndWait(level.postRoundTime,true);}displayRoundSwitch(){switchType=level.halftimeType;if(switchType=="halftime"){if(getWatchedDvar("roundlimit")){if((game["roundsPlayed"]*2)==getWatchedDvar("roundlimit"))switchType="halftime";else switchType="intermission";}else if(getWatchedDvar("winlimit")){if(game["roundsPlayed"]==(getWatchedDvar("winlimit")-1))switchType="halftime";else switchType="intermission";}else{switchType="intermission";}}level notify("round_switch",switchType);foreach(player in level.players){if(isDefined(player.connectedPostGame)||player.pers["team"]=="spectator")continue;player thread maps\mp\gametypes\_hud_message::teamOutcomeNotify(switchType,true,level.halftimeSubCaption);}roundEndWait(level.halftimeRoundEndDelay,false);}endGameOvertime(winner,endReasonText){foreach(player in level.players){player thread freezePlayerForRoundEnd(0);player thread roundEndDoF(4.0);player freeGameplayHudElems();player setClientDvars("cg_everyoneHearsEveryone",1);player setClientDvars("cg_drawSpectatorMessages",0,"g_compassShowEnemies",0);if(player.pers["team"]=="spectator")player thread maps\mp\gametypes\_playerlogic::spawnIntermission();}level notify("round_switch","overtime");foreach(player in level.players){if(isDefined(player.connectedPostGame)||player.pers["team"]=="spectator")continue;if(level.teamBased)player thread maps\mp\gametypes\_hud_message::teamOutcomeNotify(winner,false,endReasonText);else player thread maps\mp\gametypes\_hud_message::outcomeNotify(winner,endReasonText);}roundEndWait(level.roundEndDelay,false);game["status"]="overtime";level notify("restarting");game["state"]="playing";map_restart(true);}endGameHalfTime(){setDvar("scr_gameended",2);game["switchedsides"]=!game["switchedsides"];foreach(player in level.players){player thread freezePlayerForRoundEnd(0);player thread roundEndDoF(4.0);player freeGameplayHudElems();player setClientDvars("cg_everyoneHearsEveryone",1);player setClientDvars("cg_drawSpectatorMessages",0,"g_compassShowEnemies",0);if(player.pers["team"]=="spectator")player thread maps\mp\gametypes\_playerlogic::spawnIntermission();}foreach(player in level.players)player.pers["stats"]=player.stats;level notify("round_switch","halftime");foreach(player in level.players){if(isDefined(player.connectedPostGame)||player.pers["team"]=="spectator")continue;player thread maps\mp\gametypes\_hud_message::teamOutcomeNotify("halftime",true,level.halftimeSubCaption);}roundEndWait(level.roundEndDelay,false);game["status"]="halftime";level notify("restarting");game["state"]="playing";map_restart(true);}endGame(winner,endReasonText,nukeDetonated){if(!isDefined(nukeDetonated))nukeDetonated=false;if(game["state"]=="postgame"||level.gameEnded||(isDefined(level.nukeIncoming)&&!nukeDetonated)&&(!isDefined(level.gtnw)||!level.gtnw))return;game["state"]="postgame";level.gameEndTime=getTime();level.gameEnded=true;level.inGracePeriod=false;level notify("game_ended",winner);levelFlagSet("game_over");levelFlagSet("block_notifies");waitframe();setGameEndTime(0);if(isDefined(winner)&&isString(winner)&&winner=="overtime"){endGameOvertime(winner,endReasonText);return;}if(isDefined(winner)&&isString(winner)&&winner=="halftime"){endGameHalftime();return;}game["roundsPlayed"]++;if(level.teamBased){if(winner=="axis"||winner=="allies")game["roundsWon"][winner]++;maps\mp\gametypes\_gamescore::updateTeamScore("axis");maps\mp\gametypes\_gamescore::updateTeamScore("allies");}else{if(isDefined(winner)&&isPlayer(winner))game["roundsWon"][winner.guid]++;}maps\mp\gametypes\_gamescore::updatePlacement();if(level.gametype=="sd"&&game["hostname"]!="")promod\_promod_util::setHostName();foreach(player in level.players){player setClientDvar("ui_opensummary",1);}setDvar("g_deadChat",1);setDvar("ui_allow_teamchange",0);foreach(player in level.players){player thread freezePlayerForRoundEnd(1.0);player thread roundEndDoF(4.0);player freeGameplayHudElems();player setClientDvars("cg_everyoneHearsEveryone",1);player setClientDvars("cg_drawSpectatorMessages",0,"g_compassShowEnemies",0);if(player.pers["team"]=="spectator")player thread maps\mp\gametypes\_playerlogic::spawnIntermission();}thread maps\mp\gametypes\_promod::updateClassAvailability("allies");thread maps\mp\gametypes\_promod::updateClassAvailability("axis");if(!wasOnlyRound()&&!nukeDetonated){setDvar("scr_gameended",2);displayRoundEnd(winner,endReasonText);if(level.showingFinalKillcam){foreach(player in level.players)player notify("reset_outcome");level notify("game_cleanup");waittillFinalKillcamDone();}if(isDefined(game["PROMOD_KNIFEROUND"])&&game["PROMOD_KNIFEROUND"]){if(isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="match"){game["promod_do_readyup"]=true;game["promod_timeout_called"]=false;game["roundsPlayed"]=0;foreach(player in level.players){player.pers["kills"]=0;player.pers["deaths"]=0;player.pers["assists"]=0;player.pers["score"]=0;player.pers["suicides"]=0;waittillframeend;}if(winner=="axis"||winner=="allies")game["roundsWon"][winner]--;maps\mp\gametypes\_gamescore::updateTeamScore("axis");maps\mp\gametypes\_gamescore::updateTeamScore("allies");maps\mp\gametypes\_gamescore::updatePlacement();}game["PROMOD_KNIFEROUND"]=0;foreach(player in level.players){if(player.pers["team"]=="axis"||player.pers["team"]=="allies")player.hasRadar=false;waittillframeend;}}if(!wasLastRound()){levelFlagClear("block_notifies");if(checkRoundSwitch())displayRoundSwitch();foreach(player in level.players)player.pers["stats"]=player.stats;level notify("restarting");game["state"]="playing";map_restart(true);return;}if(!level.forcedEnd)endReasonText=updateEndReasonText(winner);}setDvar("scr_gameended",1);if(!isDefined(game["clientMatchDataDef"])){game["clientMatchDataDef"]="mp/clientmatchdata.def";setClientMatchDataDef(game["clientMatchDataDef"]);}if(level.gametype=="sd"||level.gametype=="dd")winner=getWinningTeam();displayGameEnd(winner,endReasonText);if(level.showingFinalKillcam&&wasOnlyRound()){foreach(player in level.players)player notify("reset_outcome");level notify("game_cleanup");waittillFinalKillcamDone();}levelFlagClear("block_notifies");level.intermission=true;level notify("spawning_intermission");foreach(player in level.players){player closepopupMenu();player closeInGameMenu();player notify("reset_outcome");player thread maps\mp\gametypes\_playerlogic::spawnIntermission();}wait(1.0);foreach(player in level.players){player.pers["stats"]=player.stats;player promod\_promod_util::execClientCommand("stoprecord");}if(!wasOnlyRound())wait 6.0;else wait 4.0;if(isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="match"){map_restart(false);return;}else{level notify("exitLevel_called");exitLevel(false);}}getWinningTeam(){if(game["roundsWon"]["allies"]==game["roundsWon"]["axis"])winner="tie";else if(game["roundsWon"]["axis"]>game["roundsWon"]["allies"])winner="axis";else winner="allies";return winner;}updateEndReasonText(winner){if(!level.teamBased)return true;if(hitRoundLimit())return&"MP_ROUND_LIMIT_REACHED";if(hitWinLimit())return&"MP_SCORE_LIMIT_REACHED";if(winner=="axis")return&"SPETSNAZ_WIN";else return&"SAS_WIN";}estimatedTimeTillScoreLimit(team){assert(isPlayer(self)||isDefined(team));scorePerMinute=getScorePerMinute(team);scoreRemaining=getScoreRemaining(team);estimatedTimeLeft=999999;if(scorePerMinute)estimatedTimeLeft=scoreRemaining/scorePerMinute;return estimatedTimeLeft;}getScorePerMinute(team){assert(isPlayer(self)||isDefined(team));scoreLimit=getWatchedDvar("scorelimit");timeLimit=getTimeLimit();minutesPassed=(getTimePassed()/(60*1000))+0.0001;if(isPlayer(self))scorePerMinute=self.score/minutesPassed;else scorePerMinute=getTeamScore(team)/minutesPassed;return scorePerMinute;}getScoreRemaining(team){assert(isPlayer(self)||isDefined(team));scoreLimit=getWatchedDvar("scorelimit");if(isPlayer(self))scoreRemaining=scoreLimit-self.score;else scoreRemaining=scoreLimit-getTeamScore(team);return scoreRemaining;}