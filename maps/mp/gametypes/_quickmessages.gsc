classBinds(){self endon("disconnect");self notifyOnPlayerCommand("mp_quickmessage","+mp_quickmessage");for(;;){self waittill("mp_quickmessage");self openpopupMenu(game["menu_quickmessage"]);}}init(){precacheHeadIcon("talkingicon");}quickmessage(response){if(!isdefined(self.pers["team"])||self.pers["team"]=="spectator"||isdefined(self.spamdelay))return;self.spamdelay=true;switch(response){case"1":saytext="Commands";self openpopupMenu(game["menu_quickcommands"]);break;case"2":saytext="Statements";self openpopupMenu(game["menu_quickstatements"]);break;case"3":saytext="Responses";self openpopupMenu(game["menu_quickresponses"]);break;}}quickcommands(response){self endon("disconnect");if(!isdefined(self.pers["team"])||self.pers["team"]=="spectator"||isdefined(self.spamdelay))return;self.spamdelay=true;switch(response){case"1":soundalias="mp_cmd_followme";saytext="Follow Me!";break;case"2":soundalias="mp_cmd_movein";saytext="Move in!";break;case"3":soundalias="mp_cmd_fallback";saytext="Fall back!";break;case"4":soundalias="mp_cmd_suppressfire";saytext="Suppressing fire!";break;case"5":soundalias="mp_cmd_attackleftflank";saytext="Attack left flank!";break;case"6":soundalias="mp_cmd_attackrightflank";saytext="Attack right flank!";break;case"7":soundalias="mp_cmd_holdposition";saytext="Hold this position!";break;default:assert(response=="8");soundalias="mp_cmd_regroup";saytext="Regroup!";break;}self saveHeadIcon();self doQuickMessage(soundalias,saytext);wait 2;self.spamdelay=undefined;self restoreHeadIcon();}quickstatements(response){if(!isdefined(self.pers["team"])||self.pers["team"]=="spectator"||isdefined(self.spamdelay))return;self.spamdelay=true;switch(response){case"1":soundalias="mp_stm_enemyspotted";saytext="Enemy spotted!";break;case"2":soundalias="mp_stm_enemiesspotted";saytext="Enemy down!";break;case"3":soundalias="mp_stm_iminposition";saytext="I'm in position.";break;case"4":soundalias="mp_stm_areasecure";saytext="Area secure!";break;case"5":soundalias="mp_stm_watchsix";saytext="Grenade!";break;case"6":soundalias="mp_stm_sniper";saytext="Sniper!";break;default:assert(response=="7");soundalias="mp_stm_needreinforcements";saytext="Need reinforcements!";break;}self saveHeadIcon();self doQuickMessage(soundalias,saytext);wait 2;self.spamdelay=undefined;self restoreHeadIcon();}quickresponses(response){if(!isdefined(self.pers["team"])||self.pers["team"]=="spectator"||isdefined(self.spamdelay))return;self.spamdelay=true;switch(response){case"1":soundalias="mp_rsp_yessir";saytext="Yes Sir!";break;case"2":soundalias="mp_rsp_nosir";saytext="No Sir!";break;case"3":soundalias="mp_rsp_onmyway";saytext="On my way.";break;case"4":soundalias="mp_rsp_sorry";saytext="Sorry.";break;case"5":soundalias="mp_rsp_greatshot";saytext="Great shot!";break;default:assert(response=="6");soundalias="mp_rsp_comeon";saytext="Took long enough!";break;}self saveHeadIcon();self doQuickMessage(soundalias,saytext);wait 2;self.spamdelay=undefined;self restoreHeadIcon();}doQuickMessage(soundalias,saytext){if(self.sessionstate!="playing")return;prefix=maps\mp\gametypes\_teams::getTeamVoicePrefix(self.team);if(isdefined(level.QuickMessageToAll)&&level.QuickMessageToAll){self.headiconteam="none";self.headicon="talkingicon";self playSound(prefix+soundalias);self sayAll(saytext);}else{if(self.sessionteam=="allies")self.headiconteam="allies";else if(self.sessionteam=="axis")self.headiconteam="axis";self.headicon="talkingicon";self playSound(prefix+soundalias);self sayTeam(saytext);self pingPlayer();}}saveHeadIcon(){if(isdefined(self.headicon))self.oldheadicon=self.headicon;if(isdefined(self.headiconteam))self.oldheadiconteam=self.headiconteam;}restoreHeadIcon(){if(isdefined(self.oldheadicon))self.headicon=self.oldheadicon;if(isdefined(self.oldheadiconteam))self.headiconteam=self.oldheadiconteam;}chooseClassName(classname){if(!isDefined(classname))return"";switch(classname){case"assault":return"Assault";case"specops":return"Spec Ops";case"demolitions":return"Demolitions";case"sniper":return"Sniper";default:return"";}}quickpromod(response){self endon("disconnect");switch(response){case"1":if(self.pers["team"]!="axis"&&self.pers["team"]!="allies")return;if(((isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="match")||(level.allowTimeOut&&isDefined(game["PROMOD_MATCH_MODE"])&&game["PROMOD_MATCH_MODE"]=="pub"))&&level.gametype=="sd"){self promod\timeout::timeoutCall();}else return;break;case"2":if(self.sessionstate=="playing"&&(!isDefined(self.isPlanting)||!self.isPlanting)&&!level.gameEnded&&isDefined(self.carryObject)&&self.isBombCarrier){self.carryObject thread maps\mp\gametypes\_gameobjects::setDropped();self.isBombCarrier=false;}break;case"3":if(isAlive(self))self suicide();break;case"4":self promod\client::toggle(self.pers["cur_demo"]);a="en";if(!self promod\client::getStat(self.pers["cur_demo"]))a="dis";self iprintln("Record reminder has been "+a+"abled");break;case"killspec":self[[level.killspec]]();break;case"silencer":if(self.pers["team"]!="axis"&&self.pers["team"]!="allies"||!isDefined(self.pers["class"])||!getDvarInt("attach_allow_"+self.pers["class"]+"_silencer")||self.pers["class"]=="sniper"||self.pers["class"]=="demolitions")return;attach="none";if(self.pers[self.pers["class"]]["loadout_primary_attachment"]=="none"){attach="silencer";self iprintln("Silencer attached");}else self iprintln("Silencer detached");self.pers[self.pers["class"]]["loadout_primary_attachment"]=attach;self maps\mp\gametypes\_promod::menuAcceptClass();break;case"grenade":if(self.pers["team"]!="axis"&&self.pers["team"]!="allies"||!isDefined(self.pers["class"]))return;classType=self.pers["class"];if(self.pers[classType]["loadout_grenade"]=="smoke_grenade"&&getDvarInt("weap_allow_flash_grenade")){self.pers[classType]["loadout_grenade"]="flash_grenade";self iprintln("Flash selected");}else if(self.pers[classType]["loadout_grenade"]=="flash_grenade"&&getDvarInt("weap_allow_smoke_grenade")){self.pers[classType]["loadout_grenade"]="smoke_grenade";self iprintln("Smoke selected");}else return;self maps\mp\gametypes\_promod::menuAcceptClass();break;case"assault":case"specops":case"demolitions":case"sniper":if((self.pers["team"]!="axis"&&self.pers["team"]!="allies"))return;if(!self maps\mp\gametypes\_promod::verifyClassChoice(self.pers["team"],response)){self iprintln(chooseClassName(response)+" is unavailable");return;}if(!isDefined(self.pers["class"])||self.pers["class"]!=response)self iprintln(chooseClassName(response)+" selected");self maps\mp\gametypes\_promod::setClassChoice(response);self maps\mp\gametypes\_promod::menuAcceptClass();break;case"shoutcaster":if(self.pers["team"]=="spectator")self openpopupMenu(game["menu_shoutcast"]);break;case"overview":if(self.pers["team"]=="spectator")self openpopupmenu(game["menu_shoutcast_map"]);break;case"X":if(self.pers["team"]=="axis"||self.pers["team"]=="allies")self openpopupMenu(game["menu_changeclass_"+self.pers["team"]]);break;case"controls":self openpopupMenu("quickpromod");break;case"graphics":self openpopupMenu("quickpromodgfx");break;}}quickpromodgfx(response){self endon("disconnect");switch(response){case"1":self setclientdvar("r_filmusetweaks",self promod\client::toggle(self.pers["filmtweak"]));break;case"2":self setclientdvar("r_normalmap",self promod\client::toggle(self.pers["normalmap"]));break;case"3":self setclientdvar("cg_fovscale",1+int(!self promod\client::toggle(self.pers["fovscale"]))*0.125);break;case"4":self setclientdvar("r_blur",0.2*self promod\client::loopthrough(self.pers["blur"],5));break;}}setFollow(response){self endon("disconnect");num=-1;for(i=0;i<level.players.size;i++){players=level.players[i];if(isDefined(players.shoutNumber)&&int(response)&&isAlive(players)&&((players.pers["team"]=="allies"&&players.shoutNumber==int(response))||((players.pers["team"]=="axis"&&players.shoutNumber==(int(response)-5))))){num=players getEntityNumber();break;}}if(num==-1){self.cyclelist=[];for(i=0;i<level.players.size;i++){players=level.players[i];if(isDefined(players.shoutNumber)&&isAlive(players)&&players.curClass==response)self.cyclelist[self.cyclelist.size]=players;}if(self.cyclelist.size>0){if(self.cyclelist.size>1){if(!isDefined(self.cycleorder)||self.cycleorder+1>=self.cyclelist.size)self.cycleorder=-1;self.cycleorder++;num=self.cyclelist[self.cycleorder]getEntityNumber();}else num=self.cyclelist[0]getEntityNumber();}}wait 0.05;if(num!=-1){self notify("stop_follow");self.spectatorclient=num;self.spectatorlast=num;self.freelook=false;self thread resetSpec();}}setFollowSpec(response){self notify("followspec");self endon("followspec");self endon("disconnect");self endon("joined_team");self endon("stop_follow");num=-1;o_num=-1;name="";o_name="";for(;;){for(i=0;i<level.players.size;i++){players=level.players[i];if(isDefined(players.spectatorlast)&&isDefined(players.specNumber)&&players!=self&&players.pers["team"]=="spectator"&&players.specNumber==int(response)){num=players.spectatorlast;name=players.name;break;}}wait 0.05;if(num!=o_num&&num!=-1){o_num=num;self.spectatorclient=num;self.spectatorlast=num;self.freelook=false;self thread resetSpec();if(name!=o_name){o_name=name;self iprintln("You are following "+name);}}wait 0.05;}}resetSpec(){self endon("disconnect");wait 0.05;self.spectatorclient=-1;}