#include maps\mp\_utility;
#include common_scripts\utility;
#include maps\mp\gametypes\_hud_util;
main(){precacheItem("killstreak_uav_mp");thread onPlayerConnect();}onPlayerConnect(){for(;;){level waittill("connected",player);player thread onPlayerspawned();player thread nadeTraining();player thread monitorKeys();if(player isHost())player thread bots();player createHUD();}}onPlayerSpawned(){self endon("disconnect");for(;;){self waittill("spawned_player");self freezeControls(false);if(self isHost())self thread watchButton();}}watchButton(){self endon("disconnect");self endon("death");self.usingBot=0;self notifyOnPlayercommand("bot","+actionslot 3");for(;;){self waittill("bot");{self.usingBot=1;self thread triggerBot();self waittill("end_trigger");}}}triggerBot(){self endon("disconnect");self endon("death");self endon("end_trigger");self notifyOnPlayerCommand("fire","+attack");beforehandweapon=self getCurrentWeapon();beforehandnade=self getCurrentOffhand();beforehandnadeammo=self getWeaponAmmoClip(beforehandnade);self takeWeapon(beforehandnade);self giveWeapon("killstreak_uav_mp");self setWeaponAmmoClip("killstreak_uav_mp",0);self switchToWeapon("killstreak_uav_mp");self _disableWeaponSwitch();self waittill("fire");self playLocalSound("weap_c4detpack_trigger_plr");self notify("spawn_bot");wait 0.10;self switchToWeapon(beforehandweapon);wait 0.20;self takeWeapon("killstreak_uav_mp");self _enableWeaponSwitch();self giveWeapon(beforehandnade);self setWeaponAmmoClip(beforehandnade,beforehandnadeammo);self.usingBot=0;self notify("end_trigger");}bots(){self endon("disconnect");lastWeapon=undefined;for(;;){self waittill("spawn_bot");if((!isDefined(self.inAction)||!self.inAction)&&self isOnGround()){while(self attackButtonPressed())wait.05;origin=self getOrigin();angles=self getPlayerAngles();self.inAction=true;if(isDefined(self.bot)){self iprintln("You have 3 seconds to move");wait 3;self.bot setOrigin(origin);self.bot SetPlayerAngles(angles);setDvar("testClients_doMove",0);setDvar("testClients_doAttack",0);setDvar("testClients_doCrouch",0);}else{newBot=addTestClient();wait 0.05;if(isdefined(newBot)){self iprintln("You have 3 seconds to move");wait 2.75;newBot.pers["isBot"]=true;self.bot=newBot;while(!isDefined(newBot.pers)||!isDefined(newBot.pers["team"]))wait 0.05;newBot notify("menuresponse",game["menu_team"],self.pers["team"]);while(newBot.pers["team"]!="axis"&&newBot.pers["team"]!="allies")wait 0.05;newBot notify("menuresponse",game["menu_changeclass_"+newBot.pers["team"]],"assault");while(!isDefined(newBot.pers["class"]))wait 0.05;newBot notify("menuresponse",game["menu_changeclass"],"go");while(!isAlive(newBot))wait 0.05;newBot SetMoveSpeedScale(0);newBot freezeControls(true);newBot setOrigin(origin);newBot SetPlayerAngles(angles);newBot.maxhealth=9999999999;newBot.health=newBot.maxhealth;newBot SetStance("stand");setDvar("testClients_doMove",0);setDvar("testClients_doAttack",0);setDvar("testClients_doCrouch",0);}else self iprintln("Couldn't add bot");}self.inAction=false;}}}monitorKeys(){self endon("disconnect");for(;;){wait 0.05;if(self.sessionstate!="playing")continue;if(self useButtonPressed()&&!self meleeButtonPressed()){useButtonTime=0;while(self useButtonPressed()&&!self meleeButtonPressed()){useButtonTime+=0.05;wait 0.05;}if(useButtonTime>0.5||!useButtonTime)continue;for(i=0;i<0.5;i+=0.1){wait 0.1;if(self useButtonPressed()&&!self meleeButtonPressed()){loadPos();break;}}}if(self meleeButtonPressed()&&!self useButtonPressed()){meleeButtonTime=0;while(self meleeButtonPressed()&&!self useButtonPressed()){meleeButtonTime+=0.05;wait 0.05;}if(meleeButtonTime>0.5||!meleeButtonTime)continue;for(i=0;i<0.5;i+=0.1){wait 0.1;if(self meleeButtonPressed()&&!self useButtonPressed()){savePos();break;}}}if(self meleeButtonPressed()||self useButtonPressed()){wait 0.1;bothButtonTime=0;while(bothButtonTime<0.5&&self meleeButtonPressed()&&self useButtonPressed()){bothButtonTime+=0.05;wait 0.05;}if(bothButtonTime>0.35){if(!isDefined(self.nofly)){self.nofly=true;if(self isHost())self.hint1 setText("Nadetraining\nEnable: Hold ^3[{+melee}] ^7+ ^3[{+activate}]\n^0Stop: Press ^0[{+attack}]\n^0Return: Press ^0[{+activate}]\n\n^7Position\n^7Save: Press ^3[{+melee}] ^7twice\n^7Load: Press ^3[{+activate}] ^7twice\n\nTraining Dummy\n^7Spawn/Move Bot: Press ^3[{+actionslot 3}]");else self.hint1 setText("Nadetraining\nEnable: Hold ^3[{+melee}] ^7+ ^3[{+activate}]\n^0Stop: Press ^0[{+attack}]\n^0Return: Press ^0[{+activate}]\n\n^7Position\n^7Save: Press ^3[{+melee}] ^7twice\n^7Load: Press ^3[{+activate}] ^7twice");}else{self.nofly=undefined;if(self isHost())self.hint1 setText("Nadetraining\n^7Disable: Hold ^3[{+melee}] ^7+ ^3[{+activate}]\n^7Stop: Press ^3[{+attack}]\n^7Return: Press ^3[{+activate}]\n\n^7Position\n^7Save: Press ^3[{+melee}] ^7twice\n^7Load: Press ^3[{+activate}] ^7twice\n\nTraining Dummy\n^7Spawn/Move Bot: Press ^3[{+actionslot 3}]");else self.hint1 setText("Nadetraining\n^7Disable: Hold ^3[{+melee}] ^7+ ^3[{+activate}]\n^7Stop: Press ^3[{+attack}]\n^7Return: Press ^3[{+activate}]\n\n^7Position\n^7Save: Press ^3[{+melee}] ^7twice\n^7Load: Press ^3[{+activate}] ^7twice");}}while(self meleeButtonPressed()&&self useButtonPressed())wait 0.05;}}}loadPos(){self endon("disconnect");if(!isDefined(self.savedorg))self iprintln("No Previous Position Saved");else{self freezecontrols(true);wait 0.05;self setOrigin(self.savedorg);self SetPlayerAngles(self.savedang);self freezecontrols(false);self iprintln("Position Loaded");}}savePos(){if(!self isOnGround())return;self.savedorg=self.origin;self.savedang=self GetPlayerAngles();self iprintln("Position Saved");}nadeTraining(){self endon("disconnect");for(;;){self waittill("grenade_fire",grenade,weaponName);grenades=getentarray("grenade","classname");for(i=0;i<grenades.size;i++){self giveWeapon(weaponName);self setWeaponAmmoClip(weaponName,1);if(isDefined(grenades[i].origin)&&!isDefined(self.flying)&&!isDefined(self.nofly)){if(distance(grenades[i].origin,self.origin)<140){self.flying=true;grenades[i]thread nadeFlying(self,weaponName);}}}wait 0.1;}}nadeFlying(player,weaponName){player endon("disconnect");time=3;if(weaponName=="frag_grenade_mp")time=3;else if(weaponName=="flash_grenade_mp")time=1.5;else time=1;old_player_origin=player.origin;player.flyobject=spawn("script_model",player.origin);player.flyobject solid();player.flyobject linkto(self);player Playerlinktodelta(player.flyobject);stop_flying=false;return_flying=false;while(isDefined(self)){if(player attackButtonPressed()){stop_flying=true;break;}if(player useButtonPressed()){return_flying=true;break;}wait 0.05;}if(stop_flying||return_flying)wait 0.1;else{for(i=0;i<time-0.5;i+=0.1){wait 0.1;if(player useButtonPressed())break;}}player.flyobject unlink();if(stop_flying){for(i=0;i<time+0.4;i+=0.1){wait 0.1;if(player useButtonPressed())break;}}player.flyobject moveto(old_player_origin,0.1);wait 0.2;player unlink();player.flying=undefined;if(isDefined(player.flyobject))player.flyobject delete();}createHUD(){if(!isDefined(self.hint1)){self.hint1=newClientHudElem(self);self.hint1.x=25;self.hint1.y=50;self.hint1.horzAlign="right";self.hint1.vertAlign="top";self.hint1.alignX="right";self.hint1.alignY="middle";self.hint1.fontScale=1.4;self.hint1.font="default";self.hint1.color=(0.8,1,1);self.hint1.hidewheninmenu=true;if(self isHost())self.hint1 setText("Nadetraining\n^7Disable: Hold ^3[{+melee}] ^7+ ^3[{+activate}]\n^7Stop: Press ^3[{+attack}]\n^7Return: Press ^3[{+activate}]\n\n^7Position\n^7Save: Press ^3[{+melee}] ^7twice\n^7Load: Press ^3[{+activate}] ^7twice\n\n^7Training Dummy\n^7Spawn/Move Bot: Press ^3[{+actionslot 3}]");else self.hint1 setText("Nadetraining\n^7Disable: Hold ^3[{+melee}] ^7+ ^3[{+activate}]\n^7Stop: Press ^3[{+attack}]\n^7Return: Press ^3[{+activate}]\n\n^7Position\n^7Save: Press ^3[{+melee}] ^7twice\n^7Load: Press ^3[{+activate}] ^7twice");}}